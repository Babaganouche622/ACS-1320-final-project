{"version":3,"sources":["components/Title/Title.js","components/App/App.js","components/CardDetails/CardDetails.js","components/Card/Card.js","components/CardList/CardList.js","components/Builder/Builder.js","components/Home/Home.js","index.js"],"names":["Title","react_default","a","createElement","className","dist","_ref","isActive","to","_ref2","App","Title_Title","react_router_dist","CardDetails","state","useLocation","console","log","data","name","description","src","image","alt","attack","map","key","amount","defence","requiredAttributes","scalesWith","Card","menuSelection","statDisplay","useRef","onClick","current","style","display","CardList","card","Card_Card","id","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","APIURL","Builder","_useState","useState","_useState2","slicedToArray","apiData","setData","_useState3","_useState4","setMenuSelection","useEffect","asyncToGenerator","_callee","_data$data","_data$data2","_data$data3","response","newData","_context","fetch","concat","json","apply","toConsumableArray","onChange","event","target","item","CardList_CardList","Home","ReactDOM","createRoot","document","getElementById","render","path","element","App_App","Home_Home","Builder_Builder","CardDetails_CardDetails"],"mappings":"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","file":"static/js/main.62f0aaf3.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom';\nimport './Title.css';\n\nexport default function Title() {\n  \n  return (\n    <div className='title'>\n      <header>\n        <h1>Elden Ring</h1>\n        <h3 className=\"Title-Subtitle\">Generate information from the public Elden Ring API</h3>\n\n        <div>\n          <NavLink className={({ isActive }) => isActive ? \"nav-link-active\" : \"nav-link\" } to=\"/\">Home</NavLink>\n          <NavLink className={({ isActive }) => isActive ? \"nav-link-active\" : \"nav-link\" } to=\"/builder\">Builder</NavLink>\n        </div>\n\n      </header>\n    </div>\n  )\n};\n","import React from 'react';\nimport { Outlet } from 'react-router-dom';\nimport './App.css';\nimport Title from '../Title/Title';\n\nexport default function App() {\n  return (\n    <section className='container'>\n      <Title />\n      <Outlet />\n    </section>\n  );\n}\n","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./CardDetails.css\";\n\nexport default function CardDetails() {\n  let { state } = useLocation();\n  return (\n    <div className=\"card-details\">\n      {console.log(state)}\n      <h2 className=\"name\">{state.data.name}</h2>\n      <p className=\"description\">{state.data.description}</p>\n      <img className=\"image\" src={state.data.image} alt={state.data.name} />\n      <table className=\"stats\">\n        {/* <h2>Base Stats</h2>\n        <h3>Attack:</h3> */}\n        {state.data.attack.map((key) => \n          <tr>\n            <td>{key.name}</td>\n            <td>{key.amount}</td>\n          </tr>\n        )}\n        {/* <h3>Defence:</h3> */}\n        {state.data.defence.map((key) => \n          <tr>\n            <td>{key.name}</td>\n            <td>{key.amount}</td>\n          </tr>\n        )}\n        {/* <h3>Required Attributes:</h3> */}\n        {state.data.requiredAttributes.map((key) => \n          <tr>\n            <td>{key.name}</td>\n            <td>{key.amount}</td>\n          </tr>\n        )}\n        {/* <h3>Scales With:</h3> */}\n        {state.data.scalesWith.map((key) => \n          <tr>\n            <td>{key.name}</td>\n            <td>{key.amount}</td>\n          </tr>\n        )}\n      </table>\n    </div>\n  );\n}\n","import React, { useRef } from 'react';\nimport './Card.css';\n\n\n\nexport default function Card({ data, menuSelection }) {\n  const statDisplay = useRef();\n\n  function displayDetails() {\n    // change stats display visibility\n    if (data) {\n      console.log(statDisplay)\n      if (statDisplay.current.style.display === 'block') {\n        statDisplay.current.style.display = 'none';\n      } else {\n        statDisplay.current.style.display = 'block';\n      }\n    }\n  }\n\n  return (\n    <div className=\"card\">\n      <h2>{data.name}</h2>\n      <p>{data.description}</p>\n      <img src={data.image} alt={data.name} />\n      {menuSelection === 'weapons' ? <button onClick={displayDetails}>Details</button> : null}\n    </div>\n  );\n}\n\n//     add a useRef to table\n//     <table className=\"stats\" ref={statDisplay}>\n//       {/* <h2>Base Stats</h2>\n// <h3>Attack:</h3> */}\n//       {data.attack.map((key) =>\n//         <tr>\n//           <td>{key.name}</td>\n//           <td>{key.amount}</td>\n//         </tr>\n//       )}\n//       {/* <h3>Defence:</h3> */}\n//       {data.defence.map((key) =>\n//         <tr>\n//           <td>{key.name}</td>\n//           <td>{key.amount}</td>\n//         </tr>\n//       )}\n//       {/* <h3>Required Attributes:</h3> */}\n//       {data.requiredAttributes.map((key) =>\n//         <tr>\n//           <td>{key.name}</td>\n//           <td>{key.amount}</td>\n//         </tr>\n//       )}\n//       {/* <h3>Scales With:</h3> */}\n//       {data.scalesWith.map((key) =>\n//         <tr>\n//           <td>{key.name}</td>\n//           <td>{key.amount}</td>\n//         </tr>\n//       )}\n//     </table>\n","import React from 'react';\nimport Card from '../Card/Card';\nimport './CardList.css';\n\nexport default function CardList({ data, menuSelection }) {\n  return (\n    <div className=\"card-list\">\n      {!data ? \n      <p> Loading...</p> : \n        data.data.map((card) => (\n          <Card data={card} key={card.id} menuSelection={menuSelection}/>\n        ))}\n    </div>\n  )}\n","import React, { useEffect, useState } from 'react';\nimport CardList from \"../CardList/CardList\";\nimport './Builder.css';\n\nconst APIURL = 'https://eldenring.fanapis.com/api/' // weapons/:name?\n\nexport default function Builder() {\n  const [apiData, setData] = useState(null);\n  const [menuSelection, setMenuSelection] = useState('weapons');\n  const listOfCategories = [\n    'ammos',\n    'armors',\n    'ashes',\n    'bosses',\n    'classes',\n    'creatures',\n    'incantations',\n    'items',\n    'locations',\n    'npcs',\n    'shields',\n    'sorceries',\n    'spirits',\n    'talismans',\n    'weapons',\n  ];\n\n  // TODO: Fix code to loop until total items are reached.\n  useEffect(() => {\n    (async () => {\n      let response = await fetch(`${APIURL}${menuSelection}?limit=100&page=${0}`);\n      let data = await response.json();\n      response = await fetch(`${APIURL}${menuSelection}?limit=100&page=${1}`);\n      let newData = await response.json();\n      data.data.push(...newData.data);\n      response = await fetch(`${APIURL}${menuSelection}?limit=100&page=${2}`);\n      newData = await response.json();\n      data.data.push(...newData.data);\n      response = await fetch(`${APIURL}${menuSelection}?limit=100&page=${3}`);\n      newData = await response.json();\n      console.log(newData.data)\n      data.data.push(...newData.data);\n      setData(data);\n    })();\n  }, [menuSelection]);\n\n  function handleSelectChange(event) {\n    setMenuSelection(`${event.target.value}`);\n  }\n\n  return (\n    <div className='builder'>\n      {console.log(apiData)}\n      <select value={menuSelection} onChange={handleSelectChange}>\n        {listOfCategories.map((item, key) => (\n          <option value={item} key={key}>{item}</option>\n        ))}\n      </select>\n      <CardList data={apiData} setData={setData} menuSelection={menuSelection}/>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./Home.css\";\n\nexport default function Home() {\n  return (\n    <div className=\"Home\">\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { HashRouter as Router, Routes, Route } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport CardDetails from './components/CardDetails/CardDetails';\nimport Builder from './components/Builder/Builder';\nimport Home from './components/Home/Home';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n<Router>\n  <Routes>\n    <Route path=\"/\" element={<App />}>\n      <Route path=\"/\" element={<Home />} />\n      <Route path=\"/builder\" element={<Builder />} />\n      <Route path=\"/details/:id\" element={<CardDetails />} />\n    </Route>\n  </Routes>\n</Router>\n);\n"],"sourceRoot":""}